<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.mapper.TRoleMapper">
  <resultMap id="BaseResultMap" type="com.qf.entity.TRole">
    <id column="ROLE_ID" jdbcType="BIGINT" property="roleId" />
    <result column="ROLE_NAME" jdbcType="VARCHAR" property="roleName" />
    <result column="ROLE_DESC" jdbcType="VARCHAR" property="roleDesc" />
    <result column="FLAG" jdbcType="TINYINT" property="flag" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    ROLE_ID, ROLE_NAME, ROLE_DESC, FLAG, CREATE_TIME
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_role
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qf.entity.TRole">
    insert into t_role (ROLE_ID, ROLE_NAME, ROLE_DESC, 
      FLAG, CREATE_TIME)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      #{flag,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qf.entity.TRole">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        ROLE_ID,
      </if>
      <if test="roleName != null">
        ROLE_NAME,
      </if>
      <if test="roleDesc != null">
        ROLE_DESC,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.entity.TRole">
    update t_role
    <set>
      <if test="roleName != null">
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null">
        ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.entity.TRole">
    update t_role
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESC = #{roleDesc,jdbcType=VARCHAR},
      FLAG = #{flag,jdbcType=TINYINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </update>

  <!--查询所有角色信息-->
  <select id="getRoleList" resultMap="BaseResultMap">
    select * from t_role
  </select>

  <!--批量授权用户（往角色用户关系表中添加数据）-->
  <insert id="batchAddUser">
    insert into t_role_user(user_id,role_id) values
    <foreach collection="ids" item="user_id"  separator=",">
      (#{user_id},#{roleId})
    </foreach>
  </insert>

  <!--解除授权关系-->
  <delete id="delAuthUser">
    delete from t_role_user where role_id=#{roleId} and user_id=#{userId}
  </delete>

</mapper>